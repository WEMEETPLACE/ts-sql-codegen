// AuthorsTable.ts :
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen. 
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import { DBConnection } from "../connection-source";

class AuthorsTable extends Table<DBConnection, 'AuthorsTable'> {

    id = this.primaryKey('id', 'int');

    name = this.optionalColumn('name', 'string');
    createdAt = this.optionalColumn('created_at', 'localDateTime');
    updatedAt = this.optionalColumn('updated_at', 'localDateTime');

    constructor() {
        super('authors')
    }
}

export const authorsTable = new AuthorsTable();


// BooksTable.ts :
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen. 
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import { DBConnection } from "../connection-source";

class BooksTable extends Table<DBConnection, 'BooksTable'> {

    id = this.primaryKey('id', 'uuid');

    name = this.column('name', 'string');
    authorId = this.column('author_id', 'int');
    releasedAt = this.optionalColumn('released_at', 'localDate');
    timeToRead = this.optionalColumn('time_to_read', 'int');

    constructor() {
        super('books')
    }
}

export const booksTable = new BooksTable();


// ChaptersTable.ts :
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen. 
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import { DBConnection } from "../connection-source";

class ChaptersTable extends Table<DBConnection, 'ChaptersTable'> {

    id = this.primaryKey('id', 'int');

    name = this.column('name', 'string');
    bookId = this.column('book_id', 'uuid');

    constructor() {
        super('chapters')
    }
}

export const chaptersTable = new ChaptersTable();
