// AuthorBooksTable.ts :
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen.
 * Any changes will be overwritten.
 */
import { View } from "ts-sql-query/View";
import type { DBConnection } from "../helpers/connection-source";
import {
    Genre,
} from "../helpers/types"

export class AuthorBooksTable extends View<DBConnection, 'PublicAuthorBooksTable'> {
    id = this.column('id', 'uuid');
    name = this.column('name', 'string');
    authorId = this.column('author_id', 'int');
    releasedAt = this.column('released_at', 'localDate');
    timeToRead = this.column('time_to_read', 'int');
    genre = this.column<Genre>('genre', 'enum', 'genre');
    weightGrams = this.column('weight_grams', 'double');
    authorName = this.column('author_name', 'string');

    constructor() {
        super('public.author_books')
    }
}




// AuthorsTable.ts :
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen.
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import type { DBConnection } from "../helpers/connection-source";

export class AuthorsTable extends Table<DBConnection, 'PublicAuthorsTable'> {
    id = this.primaryKey('id', 'int');
    name = this.column('name', 'string');
    dob = this.column('dob', 'localDate');
    createdAt = this.column('created_at', 'localDateTime');
    updatedAt = this.column('updated_at', 'localDateTime');

    constructor() {
        super('public.authors')
    }
}




// BooksTable.ts :
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen.
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import type { DBConnection } from "../helpers/connection-source";
import {
    Genre,
} from "../helpers/types"

export class BooksTable extends Table<DBConnection, 'PublicBooksTable'> {
    id = this.autogeneratedPrimaryKey('id', 'uuid');
    name = this.column('name', 'string');
    authorId = this.column('author_id', 'int');
    releasedAt = this.column('released_at', 'localDate');
    timeToRead = this.column('time_to_read', 'int');
    genre = this.column<Genre>('genre', 'enum', 'genre');
    weightGrams = this.column('weight_grams', 'double');

    constructor() {
        super('public.books')
    }
}




// ChaptersTable.ts :
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen.
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import type { DBConnection } from "../helpers/connection-source";
import {
    ChapterMetadataAdapter,
} from "../helpers/adapters"
import {
    ChapterMetadata,
} from "../helpers/types"

/**
 * Chapters information is only available for books with parseable metadata; Consumers should not assume completeness.
*/
export class ChaptersTable extends Table<DBConnection, 'PublicChaptersTable'> {
    id = this.autogeneratedPrimaryKey('id', 'int');
    name = this.column('name', 'string');
    bookId = this.column('book_id', 'uuid');
    metadata = this.column<ChapterMetadata>('metadata', 'custom', 'jsonb', ChapterMetadataAdapter);
    title = this.column('title', 'string');
    description = this.column('description', 'string');

    constructor() {
        super('public.chapters')
    }
}


