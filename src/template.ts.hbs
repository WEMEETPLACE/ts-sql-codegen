import { Table } from "ts-sql-query/Table";
import { DBConnection } from "{{dbConnectionSource}}";
{{#each adapters}}
import { {{name}} } from "{{importPath}}"
{{/each}}

export class {{className}} extends Table<DBConnection, '{{className}}'> {

    {{#dedent-by 3 "level"}}
        {{#if primaryKey}}
            {{#if primaryKey.isAutoGenerated}}
                {{primaryKey.name}} = this.autoGeneratedPrimaryKey('{{primaryKey.columnName}}', '{{primaryKey.fieldType.name}}');
            {{else}}
                {{primaryKey.name}} = this.primaryKey('{{primaryKey.columnName}}', '{{primaryKey.fieldType.name}}');
            {{/if}}
        {{/if}}
    {{/dedent-by}}

    {{#dedent-by 4 "level"}}
        {{#each fields}}
            {{#if isOptional}}
                {{#if fieldType.adapter}}
                    {{name}} = this.optionalColumn('{{columnName}}', 'custom', '{{fieldType.name}}', '{{fieldType.adapter}}');
                {{else}}
                    {{name}} = this.optionalColumn('{{columnName}}', '{{fieldType.name}}');
                {{/if}}
            {{ else }}
                {{#if fieldType.adapter}}
                    {{name}} = this.column('{{columnName}}', 'custom', '{{fieldType.name}}', '{{fieldType.adapter}}');
                {{else}}
                    {{name}} = this.column('{{columnName}}', '{{fieldType.name}}');
                {{/if}}
            {{/if}}
        {{/each}}
    {{/dedent-by}}

    constructor() {
        super('{{tableName}}')
    }
}
