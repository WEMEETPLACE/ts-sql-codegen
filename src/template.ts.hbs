{{#trim-trailing-whitespace}}
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen. 
 * Any changes will be overwritten.
 */
import { {{table.kind}} } from "ts-sql-query/{{table.kind}}";
import type { DBConnection } from "{{dbConnectionSource}}";
{{#if exportRowTypes}}
import { InsertableRow, UpdatableRow, SelectedRow } from "ts-sql-query/extras/types"
{{/if}}
{{#each imports}}
    {{#if isDefault}}
        {{#each imported}}
            {{#dedent-by 4 "level"}}
                import {{.}} from "{{../importPath}}"
            {{/dedent-by}}
        {{/each}}
    {{else}}
        {{#dedent-by 3 "level"}}
            import {
                {{#dedent-by 2 "level"}}
                    {{#each imported}}
                        {{.}},
                    {{/each}}
                {{/dedent-by}}
            } from "{{importPath}}"
        {{/dedent-by}}
    {{/if}}
{{/each}}

{{#if table.comment}}
{{ table.comment }}
{{/if}}
{{#if exportTableClass}}export {{/if}}class {{className}} extends {{table.kind}}<DBConnection, '{{table.idPrefix}}{{className}}'> {
    {{#dedent-by 3 "level"}}
        {{#each fields}}
            {{#if field.comment}}
            {{field.comment}}
            {{/if}}
            {{#if fieldType.kind}}
                {{name}} = this.{{columnMethod}}<{{fieldType.tsType.name}}>('{{columnName}}', '{{fieldType.kind}}', '{{fieldType.dbType.name}}'{{#if fieldType.adapter}}, {{fieldType.adapter.name}}{{/if}});
            {{else}}
                {{name}} = this.{{columnMethod}}('{{columnName}}', '{{fieldType.dbType.name}}'{{#if fieldType.adapter}}, {{fieldType.adapter.name}}{{/if}});
            {{/if}}
        {{/each}}
    {{/dedent-by}}

    constructor() {
        super('{{table.name}}')
    }
}

{{#if exportTableInstance}}
export const {{instName}} = new {{className}}();
{{/if}}

{{#if exportRowTypes.insertable}}
export type {{rowTypePrefix}}IRow = InsertableRow<{{className}}>;
{{/if}}
{{#if exportRowTypes.updatable}}
export type {{rowTypePrefix}}URow = UpdatableRow<{{className}}>;
{{/if}}
{{#if exportRowTypes.selected}}
export type {{rowTypePrefix}}SRow = SelectedRow<{{className}}>;
{{/if}}
{{/trim-trailing-whitespace}}
