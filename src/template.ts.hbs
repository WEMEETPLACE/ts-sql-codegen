/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen. 
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import { DBConnection } from "{{dbConnectionSource}}";
{{#each adapters}}
import {
    {{#dedent-by 2 "level"}}
        {{#each imported}}
            {{.}},
        {{/each}}
    {{/dedent-by}}
} from "{{importPath}}"
{{/each}}

{{#if exportTableClass}}export {{/if}}class {{className}} extends Table<DBConnection, '{{className}}'> {

    {{#dedent-by 3 "level"}}
        {{#if primaryKey}}
            {{#if primaryKey.isAutoGenerated}}
                {{primaryKey.name}} = this.autoGeneratedPrimaryKey('{{primaryKey.columnName}}', '{{primaryKey.fieldType.dbTypeName}}');
            {{else}}
                {{primaryKey.name}} = this.primaryKey('{{primaryKey.columnName}}', '{{primaryKey.fieldType.dbTypeName}}');
            {{/if}}
        {{/if}}
    {{/dedent-by}}

    {{#dedent-by 4 "level"}}
        {{#each fields}}
            {{#if isOptional}}
                {{#if fieldType.adapter}}
                    {{name}} = this.optionalColumn<{{fieldType.tsTypeName}}>('{{columnName}}', 'custom', '{{fieldType.dbTypeName}}', {{fieldType.adapter.name}});
                {{else}}
                    {{name}} = this.optionalColumn('{{columnName}}', '{{fieldType.dbTypeName}}');
                {{/if}}
            {{ else }}
                {{#if fieldType.adapter}}
                    {{name}} = this.column<{{fieldType.tsTypeName}}>('{{columnName}}', 'custom', '{{fieldType.dbTypeName}}', {{fieldType.adapter.name}});
                {{else}}
                    {{name}} = this.column('{{columnName}}', '{{fieldType.dbTypeName}}');
                {{/if}}
            {{/if}}
        {{/each}}
    {{/dedent-by}}

    constructor() {
        super('{{tableName}}')
    }
}

{{#if exportTableInstance}}
export const {{instName}} = new {{className}}();
{{/if}}
